# Algae farm online scenario from the unity simulator.

# Parameters for PipelineSimDrGtPublisher
# Entry point: pipeline_dr_gt_publisher_node = sam_graph_slam_2.pipeline_slam_gt_dr_publisher:main
# Using the pipeline dr and gt publisher for now
algae_dr_gt_publisher_node:
  ros__parameters:
    gt_topic: "/sam/sim/odom"
    imu_topic: "/sam0/core/imu"
    pub_dr_topic: "/dr_odom"
    pub_gt_topic: "/gt_odom"
    map_frame: "odom"
    robot_frame: "sam0_base_link"
    dr_tf_frame: "dr_frame"
    dr_noise: False
    bound_depth: True
    bound_pitch_roll: True



# Parameters for
# Entry point: sam_slam_node = sam_graph_slam_2.sam_slam_ros_classes:main
sam_slam_node:
  ros__parameters:
    ## ROS node parameters
    # Output path
    output_path: "/home/julian/testing_files"
    # Scenario
    simulated_data: True
    simulated_detections: False
    pipeline_scenario: False
    record_ground_truth: True
    pipeline_lines: "[[0, 1], [1, 2], [2, 3]]"  # Pipeline
    pipeline_colors: "[[1.0, 1.0, 0.0], [0.0, 1.0, 1.0], [1.0, 0.0, 1.0]]"
    # Graph input parameters
    prioritize_buoy_detections: True
    manual_associations: False
    rope_associations: True
    # Topic names
    robot_name: "sam"
    # Currently most topics are set using the simulated_data and pipeline_scenario parameters
    # The goal is to set all scenario specific values from a config yaml
    # Frame names
    map_frame: "odom"
    # Also accessed by the graph
    # Timing
    dr_update_time: 2.0
    detect_update_time: 0.5
    camera_update_time: 0.5
    sss_update_time: 5.0
    # Verboseness
    verbose_listener_DRs: False
    verbose_listener_detections: True
    verbose_listener_sonars: False
    verbose_listener_buoys: False
    verbose_listener_cameras: False

    ## Graph parameters
    # Ideally, these should be passed to the graph object without ROS
    # Parameters shared with the ROS node: map_frame, manual_associations

    # Frames
    # map_frame shared with ROS node
    robot_frame: "sam0"
    est_frame: "estimated/base_link"
    # DA parameters
    # manual_associations shared with ROS node
    buoy_seq_ids: "[]"
    buoy_line_ids: "[]"
    # Buoy DA thresholds
    da_distance_threshold: 50.0
    da_m_distance_threshold: -1.0
    # Rope detection parameters
    individual_rope_detections: True
    use_rope_detections: True
    rope_batch_size: 0
    # Rope update method using line DA
    rope_batch_by_line: False
    rope_batch_by_line_timeout: 100
    batch_by_swath: False  # will override rope batching
    # Swath update method parameters
    swath_seq_ids: "[]"  # list[list[int, int]]
    # Allows for manual DA of rope detections by swath
    swath_line_ids: "[]"  # list[int]
    batch_by_swath_manual_rope_da: False
    # Prior updating parameter
    update_priors: False
    # Sigmas
    # Agent prior sigmas
    prior_ang_sig_deg: 10.0
    prior_dist_sig: 1.0
    # buoy prior sigmas
    buoy_dist_sig: 1.0
    # rope prior sigmas
    rope_dist_sig: 15.0  # Used in the naive
    rope_along_sig: -0.50  # Negative value will scale rope length, Used for less naive rope priors
    rope_cross_sig: 1.0  # Used for less naive rope priors
    # agent odometry sigmas
    odo_ang_sig_deg: 0.5
    odo_dist_sig: 0.1
    # detection sigmas
    # buoys (points)
    point_detect_ang_sig_deg: 0.5
    point_detect_dist_sig: 0.1
    # ropes (lines)
    line_detect_ang_sig_deg: 1.0
    line_detect_dist_sig: .1
    # Verbose parameters
    verbose_graph_update: True
    verbose_graph_rope_detections: True
    verbose_graph_rope_batching: False
    verbose_graph_buoy_detections: False
    verbose_graph_rope_associations: True
    verbose_graph_buoy_associations: False

algae_sss_detector:
  ros__parameters:
    robot_name: "sam0"
    sss_resolution: 0.05
    save_at_end: False